mutate(date = as.character(date))
plot.new.case.for.tow.last.month <- incidence(       # create incidence object
x = new.case.for.tow.last.month,             # dataset
#date_index = date,  # date column
count = new_deaths, # column with counts
interval = "month",          # date grouping interval
groups = location
)
incidence2::facet_plot(
plot.new.case.for.tow.last.month,      # incidence object
facets = location,# facet column
title = "Số ca nhiễm theo tháng",
xlab = " Thời gian",
ylab = " Số ca nhiễm")
cumulative_case_counts <- new.case.for.each.month %>%
count(mounth) %>%                # count of rows per day (returned in column "n")
mutate(
cumulative_cases = cumsum(n)       # new column of the cumulative number of rows at each date
)
cumulative_case_counts <- new.case.for.each.month %>%
count(date) %>%                # count of rows per day (returned in column "n")
mutate(
cumulative_cases = cumsum(n)       # new column of the cumulative number of rows at each date
)
View(cumulative_case_counts)
View(cumulative_case_counts)
cumulative_case_counts <- new.case.for.each.month %>%
count(new_cases) %>%                # count of rows per day (returned in column "n")
mutate(
cumulative_cases = cumsum(n)       # new column of the cumulative number of rows at each date
)
View(cumulative_case_counts)
View(cumulative_case_counts)
View(new.case.for.each.month)
cumulative_case_counts <- new.case.for.each.month %>%
#count(new_cases) %>%                # count of rows per day (returned in column "n")
mutate(
cumulative_cases = cumsum(new_cases)       # new column of the cumulative number of rows at each date
)
View(cumulative_case_counts)
View(cumulative_case_counts)
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
date_index = date,  # date column
count = new_deaths, # column with counts
interval = "month",          # date grouping interval
groups = location
)
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
groups = location
)
plot.cumulative_case_counts
View(cumulative_case_counts)
View(cumulative_case_counts)
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
date_index = date,  # date column
count = cumulative_cases, # column with counts
interval = "month",          # date grouping interval
groups = location
)
plot.cumulative_case_counts
View(new.case.for.each.month)
View(new.case.for.each.month)
View(plot.new.case.for.each.month)
View(new.case.for.each.month)
cumulative_case_counts <- new.case.for.each.month %>%
#count(new_cases) %>%                # count of rows per day (returned in column "n")
mutate(
cumulative_cases = cumsum(new_cases)       # new column of the cumulative number of rows at each date
)
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
date_index = date,  # date column
count = cumulative_cases, # column with counts
interval = "month",          # date grouping interval
groups = location
)
plot.cumulative_case_counts
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
date_index = date,  # date column
count = cumulative_cases, # column with counts
interval = "day",          # date grouping interval
groups = location
)
plot.cumulative_case_counts
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
date_index = date,  # date column
count = cumulative_cases, # column with counts
#interval = "day",          # date grouping interval
groups = location
)
plot.cumulative_case_counts
plot.cumulative_case_counts <- incidence(       # create incidence object
x = cumulative_case_counts,             # dataset
#date_index = date,  # date column
count = cumulative_cases, # column with counts
#interval = "day",          # date grouping interval
groups = location
)
incidence2::facet_plot(
plot.cumulative_case_counts,      # incidence object
facets = location,# facet column
title = "Số ca nhiễm theo tháng",
xlab = " Thời gian",
ylab = " Số ca nhiễm")
View(covid.data)
source("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6/a.R", echo=TRUE)
View(plot.new.case.for.each.month)
View(plot.new.case.for.each.month)
cumulative_case_counts <- plot.new.case.for.each.month %>%
#count(new_cases) %>%                # count of rows per day (returned in column "n")
mutate(
cumulative_cases = cumsum(new_cases)       # new column of the cumulative number of rows at each date
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date, y = new_cases)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_line(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date, y = new_cases)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_point(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date, y = new_cases)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_point(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
#breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
scale_x_date(
# 1 break every 1 month
date_breaks = "1 months",
# labels should show month then date
date_labels = "%b %m"
),
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date, y = new_cases)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_point(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
#breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)+
scale_x_date(
# 1 break every 1 month
date_breaks = "1 months",
# labels should show month then date
date_labels = "%b %m"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date, y = new_cases)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_point(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
#breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)+
scale_x_date(
# 1 break every 1 month
date_breaks = "1 months",
# labels should show month then date
date_labels = "%m"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date, y = new_cases)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_point(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
#breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)+
scale_x_date(
# 1 break every 1 month
date_breaks = "1 days",
# labels should show month then date
#date_labels = "%m"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_point(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
#breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)+
scale_x_date(
# 1 break every 1 month
date_breaks = "1 days",
# labels should show month then date
#date_labels = "%m"
)
ggplot(data = new.case.for.each.month, mapping = aes(x=date)) +
# make histogram: specify bin break points: starts the Monday before first case, end Monday after last case
geom_histogram(
# mapping aesthetics
#mapping = aes(x = date),  # date column mapped to x-axis
# histogram bin breaks
#breaks = monthly_breaks_central, # histogram bin breaks defined previously
# bars
color = "darkblue",     # color of lines around bars
fill = "lightblue"      # color of fill within bars
)+
facet_wrap(
~location,
scales = "free"
)+
scale_x_date(
# 1 break every 1 month
date_breaks = "1 days",
# labels should show month then date
#date_labels = "%m"
)
rm(all)
clearPushBack()
source("~/.active-rstudio-document", echo=TRUE)
plot.data.new.case.each.day.1st.ct <- incidence(       # create incidence object
x = new.case.each.day.1dt.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
new.case.each.day.1st.ct <- covid.data %>%
select(location, date, new_cases) %>%
filter(location == name.country[1])
plot.data.new.case.each.day.1st.ct <- incidence(       # create incidence object
x = new.case.each.day.1dt.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
plot.data.new.case.each.day.1st.ct <- incidence(       # create incidence object
x = new.case.each.day.1st.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
plot(plot.data.new.case.each.day.1st.ct)
new.case.each.day.1st.ct <- covid.data %>%
select(location, date, new_cases) %>%
filter(location == name.country[1])
plot.data.new.case.each.day.1st.ct <- incidence(       # create incidence object
x = new.case.each.day.1st.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
plot(
plot.data.new.case.each.day.1st.ct,
legend = "top",                       # legend on top
title = name.country[1],  # title
xlab = "Số ca nhiễm",               # x-axis label
ylab = "Thời gian",               # y-axis label
)
canada <- plot(
plot.data.new.case.each.day.1st.ct,
legend = "top",                       # legend on top
title = name.country[1],  # title
xlab = "Số ca nhiễm",               # x-axis label
ylab = "Thời gian",               # y-axis label
)
ggsave(canada, "D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
ggplot(data = plot.data.new.case.each.day.1st.ct)+
geom_histogram(mapping = aes(x=date))
ggplot(data = plot.data.new.case.each.day.1st.ct)+
geom_histogram(mapping = aes(x=date_index))
data <-c(plot.data.new.case.each.day.1st.ct$date_index,plot.data.new.case.each.day.1st.ct$new_cases)
data <-list(plot.data.new.case.each.day.1st.ct$date_index,plot.data.new.case.each.day.1st.ct$new_cases)
View(data)
ggplot(data = data)+
geom_histogram(mapping = aes(x=date_index))
rm(data)
data <- data.frame(plot.data.new.case.each.day.1st.ct$date_index, plot.data.new.case.each.day.1st.ct$new_cases)
ggplot(data = data)+
geom_histogram(mapping = aes(x=plot.data.new.case.each.day.1st.ct.date_index))
ggplot(data = plot.data.new.case.each.day.1st.ct)+
geom_col(mapping = aes(x=date_index))
ggplot(data = plot.data.new.case.each.day.1st.ct)+
geom_col(mapping = aes(x=date_index, y=new_cases))
last_error()
rlang::last_error()
setwd(D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task3)
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task3")
pdf("canada.pdf")
canada <- plot(
plot.data.new.case.each.day.1st.ct,
legend = "top",                       # legend on top
title = name.country[1],  # title
xlab = "Số ca nhiễm",               # x-axis label
ylab = "Thời gian",               # y-axis label
)
dev.off()
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
pdf("canada.pdf")
dev.off()
pdf("canada.pdf")
canada
dev.off()
canada <- plot(
plot.data.new.case.each.day.1st.ct,
legend = "top",                       # legend on top
title = name.country[1],  # title
xlab = "new cases",               # x-axis label
ylab = "time",               # y-axis label
)
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
pdf("canada.pdf")
canada
dev.off()
warnings()
new.case.each.day.2st.ct <- covid.data %>%
select(location, date, new_cases) %>%
filter(location == name.country[2])
plot.data.new.case.each.day.2st.ct <- incidence(       # create incidence object
x = new.case.each.day.2st.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
canada <- plot(
plot.data.new.case.each.day.2st.ct,
legend = "top",                       # legend on top
title = name.country[2],  # title
xlab = "new cases",               # x-axis label
ylab = "time",               # y-axis label
)
#Greenland
new.case.each.day.2st.ct <- covid.data %>%
select(location, date, new_cases) %>%
filter(location == name.country[2])
plot.data.new.case.each.day.2st.ct <- incidence(       # create incidence object
x = new.case.each.day.2st.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
Greenland <- plot(
plot.data.new.case.each.day.2st.ct,
legend = "top",                       # legend on top
title = name.country[2],  # title
xlab = "new cases",               # x-axis label
ylab = "time",               # y-axis label
)
new.case.each.day.3st.ct <- covid.data %>%
select(location, date, new_cases) %>%
filter(location == name.country[3])
plot.data.new.case.each.day.3st.ct <- incidence(       # create incidence object
x = new.case.each.day.3st.ct,             # dataset
date_index = date,  # date column
count = new_cases, # column with counts
interval = "month",          # date grouping interval
)
United.States <- plot(
plot.data.new.case.each.day.3st.ct,
legend = "top",                       # legend on top
title = name.country[3],  # title
xlab = "new cases",               # x-axis label
ylab = "time",               # y-axis label
)
canada
source("~/.active-rstudio-document", echo=TRUE)
name.country[1]
Canada
Greenland
United.States
install.packages("cowplot")
library(cowplot)
cowplot::plot_grid(Canada, Greenland)
cowplot::plot_grid(Canada, Greenland, United.States)
source("~/.active-rstudio-document", echo=TRUE)
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
pdf("cau1.pdf",
width = 350, # set chiều rộng của ảnh
height = 350)
cowplot::plot_grid(Canada, Greenland, United.States)
dev.off()
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
pdf("cau1.pdf",
width = 1920, # set chiều rộng của ảnh
height = 1080)
cowplot::plot_grid(Canada, Greenland, United.States)
dev.off()
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
pdf("cau1.pdf",
width = 865, # set chiều rộng của ảnh
height = 571)
cowplot::plot_grid(Canada, Greenland, United.States)
dev.off()
setwd("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6")
pdf("cau1.pdf",
width = 865, # set chiều rộng của ảnh
height = 571)
cowplot::plot_grid(Canada, Greenland, United.States)
dev.off()
ggsave(Canada, "D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6/test.pdf")
source("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6/main.R", echo=TRUE)
cau1.ncases.CND
cau1.ncases.GRL
cau1.ncases.US
cau2.ndeaths.CND
cau2.ndeaths.GRL
cau2.ndeaths.US
here()
source("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6/backup/main.R", echo=TRUE)
here("R", "task6")
here("R", "task6", "owid-covid-data.csv")
covid.data <- import(here("R", "task6", "owid-covid-data.csv"))
here("R", "task6", "owid-covid-data.csv")
here("R", "owid-covid-data.csv")
covid.data <- import(here("R", "owid-covid-data.csv"))
here("R", "task6")
here("R", "task6", "task8_subtask1_Cananda")
#########
#xuat file
#########
#cau1
##
ggsave(cau1.ncases.CND, here("R", "task6", "task8_subtask1_Cananda"))
View(cau1.ncases.CND)
#########
#xuat file
#########
#cau1
##
cau1.ncases.CND
ggsave(here("R", "task6", "task8_subtask1_Cananda"))
#########
#xuat file
#########
#cau1
##
ggsave(cau1.ncases.CND, here("R", "task6", "task8_subtask1_Cananda"))
rlang::last_error()
rlang::last_trace()
#########
#xuat file
#########
#cau1
##
ggsave(cau1.ncases.CND, here("R", "task6", "task8_subtask1_Cananda.pdf"))
ggsave( filename = "task6_subtask1_Cananda.pdf",
plot = cau1.ncases.CND,
scale = 1,
units = c("in"),
dpi = 300)
cau1.ncases.US
source("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6/backup/main.R", echo=TRUE)
source("D:/University/Video_semester2_year1/ctrr/btl/CTRR/R/task6/task6.R", echo=TRUE)
