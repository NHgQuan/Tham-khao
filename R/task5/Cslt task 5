*****Cơ sở lý thuyết*****

Dữ liệu nhiễm bệnh tích lũy cho từng tháng:
Số ca nhiễm của 1 ngày trong tháng bằng số ca nhiễm trong ngày hôm đó cộng với tổng số ca nhiễm của tất cả các ngày trước đó.
Lấy số ca nhiễm từng ngày trong tháng chia cho số ca nhiễm của ngày cuối cùng, được phần trăm số ca nhiễm tích lũy mà ngày đó đạt được so với tổng số ca nhiễm trong tháng.

Tương tự với số ca tử vong.

Các hàm dùng trong task 5:
+ Hàm length để lấy độ dài của cột dữ liệu
+ Hàm for và hàm if để cho chạy và lọc dữ liệu cần sử dụng
+ Hàm as.Data để chuyển kiểu dữ liệu sang kiểu "date"
+ Hàm data.frame để nhập hai khung dữ liệu lại thành một
+ Hàm ggplot để vẽ biểu đồ, goem_line để vẽ biểu đồ đường, theme để trang trí, labs để đặt tên biểu đồ và trục x, y
+ Hàm is.na để tìm giá trị n/a trong dữ liệu


*****Hướng làm*****
Đầu tiên ta lấy dữ liệu từ file owid-covid-data vào dataRaw và lọc lại các dữ liệu của các nước trong mã đề vào dataMade:
    dataRaw <- read.csv2("owid-covid-data.csv", header = TRUE, sep = ",")
    x <- length(dataRaw$continent)
    MADEcountry <- c("CAN", "GRL", "USA")
    dataMade <- dataRaw[0,]
    y <- 0
    for (ctry in 1:3) 
      for (i in 1 : x)
      {
        if (stri_sub(dataRaw$iso_code[i], -3) == MADEcountry[ctry])
        {
          y <- y + 1
          dataMade[y,] <- dataRaw[i,]
        }
      }
Chuyển kiểu dữ liệu của cột date từ "numberic" sang "date" và đổi tất cả giá trị N/a của cột new_deaths và new_cases thành giá trị 0
    dataMade$date <- as.Date(dataMade$date, "%m/%d/%Y")
    dataMade$new_cases[which(is.na(dataMade$new_cases))] <- 0
    dataMade$new_deaths[which(is.na(dataMade$new_deaths))] <- 0
Vì 3 câu 1, 2, 3 yêu cầu vẽ biểu đồ trùng khoảng thời gian với nhau nên chỉ cần lọc dữ liệu 1 lần và sử dụng cho cả 3 câu.
VD: Lọc dữ liệu số ca nhiễm bệnh và số ca tử vong ở Canada năm 2020 theo các tháng của mã đề (2, 3, 4, 6) và vẽ biểu đồ số ca nhiễm theo tháng:
      data_can_2020 <- dataMade[0,]
      y <- 0
      for (j in 1 : 4)
      {
        curYear <- data_year_2020[j]
        curMonth <- data_month[j]
        for (i in 1 : x)
        {
          if (dataMade$iso_code[i] == MADEcountry[1])
          {
            k <- as.Date(dataMade$date[i], format = "%m/%d/%Y")
              if (month(k) == curMonth)
                if (year(k) == curYear)
            {
              y <- y + 1
              data_can_2020[y,] <- dataMade[i,]
            }
          }
        }
      }
  Tương tự cho 2 nước Greenland, USA và tương tự trong 2 năm 2021, 2022.
  Sau khi có dữ liệu thì dùng ggpplot vẽ biểu đồ:
  VD: Biểu đồ số ca nhiễm theo tháng của Canada năm 2020:
      ggplot() +
      geom_line(data=data_can_2020, mapping=aes(x=date, y=new_cases, group = 1), color="blue", size = 1.1) +
      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
            panel.background = element_blank(), axis.line = element_line(colour = "black")) +
            labs(title = "New cases in Canada in 2020", x= "Date", y = "New cases") 
Tương tự câu 4, 5, 6 cũng chỉ cần lọc dữ liệu 1 lần và sử dụng cho cả 3.
Về lọc dữ liệu cho câu 4, 5, 6 cũng tương tự như ở trên, chỉ đổi từ 4 tháng 2, 3, 4, 6 thành 2 tháng 11, 12.
Câu 7
Đầu tiên ta tạo 1 vector gồm 4 số để lưu tổng số ca nhiễm của mỗi tháng
VD: Tổng số ca nhiễm mỗi tháng trong năm 2020 của Canada
    can7_2020_sum <- c(0, 0, 0, 0)
    for (j in 1 : 4)
    {
      curYear <- data_year_2020[j]
      curMonth <- data_month[j]
        for (i in 1 : x)
        {
          if (dataMade$iso_code[i] == MADEcountry[1])
          {
            k <- as.Date(dataMade$date[i], format = "%m/%d/%Y")
            if (month(k) == curMonth)
              if (year(k) == curYear)
                {
                can7_2020_sum[j] <- can7_2020_sum[j] + dataMade$new_cases[i]
                }
          }
        }
    }
Tiếp theo, ta biến đổi số ca nhiễm của từng ngày bằng số ca nhiễm của ngày hôm đó cộng với số ca nhiễm của các ngày còn lại trong tháng và lưu vào 1 vector có độ dài bằng độ dài cột new_cases
VD: Biến đổi số ca nhiễm của Canada trong năm 2020
    can7_2020 <- c(1 : length(data_can_2020$new_cases))

    y <- 0
    sum <- 0
    for (j in 1 : 4)
    {
      curYear <- data_year_2020[j]
      curMonth <- data_month[j]
      for (i in 1 : length(data_can_2020$new_cases))
      {
        k <- as.Date(data_can_2020$date[i], format = "%m/%d/%Y")
        if (month(k) == curMonth)
          if (year(k) == curYear)
          {
            sum <- sum + data_can_2020$new_cases[i]
            y <- y + 1
            can7_2020[y] <- sum
          }
      }
      sum <- 0
    }

Biến đổi vector trên thành phần trăm tích lũy số ca nhiễm bằng cách chia cho tổng số ca nhiễm mỗi tháng đã tính
VD: Biến đổi số ca nhiễm của Canada thành phần trăm tích lũy
    for (j in 1 : 4)
    {
      curYear <- data_year_2020[j]
      curMonth <- data_month[j]
      for (i in 1 : length(data_can_2020$new_cases))
      {
        k <- as.Date(data_can_2020$date[i], format = "%m/%d/%Y")
        if (month(k) == curMonth)
          if (year(k) == curYear)
          {
            can7_2020[i] <- can7_2020[i] / can7_2020_sum[j]
          }
      }
    }
Cuối cùng, kết hợp vector trên với vector tháng và vẽ biểu đồ 
VD: Biểu đồ phần trăm tích lũy số ca nhiễm bệnh ở Canada theo thời gian là tháng trong năm 2020
    data_can7_2020 <- data.frame(data_can_2020$date, can7_2020)
    ggplot(data = data_can7_2020, mapping = aes(x = data_can_2020$date, y = can7_2020)) + geom_line(color = "blue", size = 1.2) +
      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
            panel.background = element_blank(), axis.line = element_line(colour = "black")) +
            labs(title = "Ratio of new cases in Canada in 2020", x= "Date", y = "Ratio") 
Tương tự cho 2 nước Greenland, USA và tương tự trong 2 năm 2021, 2022.
Bài 8: Tương tự bài 7, chỉ cần đổi số ca nhiễm thành số ca tử vong
